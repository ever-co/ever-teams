{
	"name": "ever-teams",
	"version": "0.1.0",
	"description": "Ever Teams - Open Work and Project Management Platform",
	"license": "AGPL-3.0",
	"homepage": "https://ever.team",
	"repository": {
		"type": "git",
		"url": "https://github.com/ever-co/ever-teams.git"
	},
	"bugs": {
		"url": "https://github.com/ever-co/ever-teams/issues"
	},
	"private": true,
	"author": {
		"name": "Ever Co. LTD",
		"email": "ever@ever.co",
		"url": "https://ever.co"
	},
	"scripts": {
		"prepare:husky": "npx husky install .husky",
		"ng": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=8192 yarn nx",
		"ng:prod": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=8192 yarn nx",
		"ng:ci": "cross-env NODE_ENV=production NODE_OPTIONS=--max_old_space_size=7000 yarn nx",
		"config": "yarn ts-node ./.scripts/configure.ts",
		"config:dev": "yarn run config -- --environment=dev",
		"config:prod": "yarn run config -- --environment=prod",
		"start": "yarn build && yarn concurrently --raw --kill-others \"yarn start:web\"",
		"start:prod": "yarn build && yarn concurrently --raw --kill-others \"yarn start:web:prod\"",
		"start:web": "cd apps/web && yarn run start",
		"start:web:dev": "cd apps/web && yarn run dev",
		"start:web:forever": "yarn run config:dev && forever start ng serve web --disable-host-check --host 0.0.0.0",
		"start:web:pm2": "cross-env NODE_ENV=development NODE_OPTIONS=--max_old_space_size=4096 yarn build:web && yarn ts-node ./apps/web/src/pm2bootstrap.ts",
		"start:web:prod": "yarn run config:prod && yarn ng serve web --configuration production --disable-host-check --host 0.0.0.0 --prod",
		"bootstrap": "yarn install && yarn lerna bootstrap",
		"prebuild": "rimraf dist coverage",
		"build": "yarn build:web && yarn build:mobile && yarn build:extensions",
		"build:web": "cd apps/web && yarn run build",
		"build:mobile": "cd apps/mobile && yarn install && yarn run build",
		"build:extensions": "cd apps/extensions && yarn install && yarn run build",
		"commit": "git-cz",
		"commit:lint": "commitlint -E HUSKY_GIT_PARAMS",
		"semantic-release": "semantic-release",
		"test": "yarn run postinstall.web && yarn run config:dev && yarn ng test",
		"lint": "lerna run lint",
		"lint-fix": "cd apps/web && eslint . --fix",
		"lint-fix:scss": "cd apps/web && stylelint **/*.{scss,css} --fix",
		"lint-staged": "lint-staged",
		"e2e": "yarn run postinstall.web && yarn run config:dev && yarn ng e2e --browser chrome",
		"e2e:ci": "yarn run postinstall.web && yarn run config:prod && yarn --frozen-lockfile --cache-folder ~/.cache/yarn ng:ci e2e -c=production --prod --headless",
		"prettier": "yarn prettier:web && yarn prettier:mobile && yarn prettier:extensions",
		"prettier:extensions": "cd apps/extensions && prettier --write **/*.{js,jsx,ts,tsx,scss,css} --config ./.prettierrc.cjs",
		"prettier:web": "cd apps/web && prettier --write **/*.{js,jsx,ts,tsx,scss,css} --config ./.prettierrc",
		"prettier:mobile": "cd apps/mobile && prettier --write **/*.{js,jsx,ts,tsx,scss,css} --config ./.prettierrc",
		"postinstall": "lerna bootstrap",
		"precommit": "yarn lint-fix && yarn lint-fix:scss && yarn prettier",
		"affected:apps": "yarn nx affected:apps",
		"affected:libs": "yarn nx affected:libs",
		"affected:build": "yarn nx affected:build",
		"affected:e2e": "yarn nx affected:e2e",
		"affected:test": "yarn nx affected:test",
		"affected:lint": "yarn nx affected:lint",
		"affected:dep-graph": "yarn nx affected:dep-graph",
		"affected": "yarn nx affected",
		"format": "yarn nx format:write",
		"format:write": "yarn nx format:write",
		"format:web:write": "cd apps/web && yarn nx format:write",
		"format:web:check": "cd apps/web && yarn nx format:check",
		"format:check": "nx format:check",
		"update": "yarn ng update @nx/workspace",
		"update:check": "yarn ng update",
		"workspace-schematic": "yarn nx workspace-schematic",
		"workspace-generator": "nx workspace-generator",
		"dep-graph": "nx dep-graph",
		"help": "nx help",
		"doc:build": "compodoc -p tsconfig.json -d dist/docs",
		"doc:serve": "compodoc -s -d dist/docs",
		"doc:build-serve": "compodoc -p tsconfig.json -d docs -s",
		"postinstall.electron": "yarn electron-builder install-app-deps && yarn node tools/electron/postinstall",
		"postinstall.web": "yarn node tools/web/postinstall",
		"spell": "cspell . --config .cspell.json",
		"spellcheck": "cspell .",
		"config:electron": "yarn ts-node ./.scripts/electron.env.ts",
		"config:electron:web:build": "yarn ts-node ./.scripts/configure.electron.ts",
		"pack": "yarn ts-node .scripts/electron-package-utils/package-util.ts",
		"pack:server-web": "yarn run pack --desktop=server-web",
		"config:server-web": "yarn run config:electron -- --environment=prod --desktop=server-web",
		"dev:server-web": "cross-env NODE_ENV=production yarn prepare:config:server-web && yarn build:web:desktop && yarn run prepare:server-web && yarn copy:build:web && yarn run start:server-web",
		"build:web:desktop": "yarn config:electron:web:build -- --type=constant && cross-env NEXT_BUILD_OUTPUT_TYPE=standalone NEXT_SHARP_PATH=/tmp/node_modules/sharp yarn build:web",
		"copy:build:web": "yarn ts-node .scripts/copy-web-build.ts && yarn config:electron:web:build -- --type=server",
		"start:server-web": "cd apps/server-web && yarn run start",
		"postinstall:electron": "cd apps/server-web && yarn run postinstall",
		"prepare:server-web": "cd apps/server-web && yarn run prepare:electron && yarn run build",
		"pack:server-web:mac": "cd apps/server-web && yarn run pack:mac",
		"pack:server-web:win": "cd apps/server-web && yarn run pack:win",
		"pack:server-web:linux": "cd apps/server-web && yarn run pack:linux",
		"build:server-web": "yarn build:web:desktop && yarn prepare:server-web && yarn run copy:build:web && yarn postinstall:electron",
		"package:server-web:mac": "yarn build:server-web && yarn pack:server-web:mac",
		"package:server-web:win": "yarn build:server-web && yarn pack:server-web:win",
		"package:server-web:linux": "yarn build:server-web && yarn pack:server-web:linux",
		"generate:icons": "yarn ts-node .scripts/icon-utils/icon-factory.ts",
		"generate:icons:server-web": "yarn run generate:icons --desktop=server-web",
		"prepare:config:server-web": "cross-env NODE_ENV=production yarn config:server-web && yarn pack:server-web && yarn generate:icons:server-web",
		"build:web-server:linux:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn prepare:config:server-web && yarn build:server-web && yarn pack:server-web:linux",
		"build:web-server:linux:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn prepare:config:server-web && yarn build:server-web && yarn pack:server-web:linux",
		"build:web-server:mac:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn prepare:config:server-web && yarn build:server-web && yarn pack:server-web:mac",
		"build:web-server:windows:release": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=12288 yarn prepare:config:server-web && yarn build:server-web && yarn pack:server-web:win",
		"build:web-server:windows:release:gh": "cross-env NODE_ENV=production NODE_OPTIONS=--max-old-space-size=30000 yarn prepare:config:server-web && yarn build:server-web && yarn pack:server-web:win"
	},
	"config": {
		"commitizen": {
			"path": "cz-conventional-changelog"
		}
	},
	"commitlint": {
		"extends": [
			"@commitlint/config-conventional"
		]
	},
	"husky": {
		"hooks": {
			"commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
			"pre-commit": "lint-staged pretty-quick --no-verify --staged"
		}
	},
	"lint-staged": {
		"./apps/web/**/*.tsx": "eslint --fix"
	},
	"release": {
		"verifyConditions": [
			"@semantic-release/changelog",
			"@semantic-release/npm",
			"@semantic-release/git",
			"@semantic-release/github"
		],
		"prepare": [
			"@semantic-release/changelog",
			"@semantic-release/npm",
			"@semantic-release/git"
		],
		"publish": [
			"@semantic-release/github"
		],
		"generateNotes": {
			"preset": "react"
		},
		"npmPublish": false
	},
	"workspaces": {
		"packages": [
			"apps/web",
			"apps/server-web",
			"packages/*",
			"libs/*",
			"tools"
		],
		"nohoist": []
	},
	"resolutions": {},
	"dependencies": {
		"@lexical/react": "^0.8.0",
		"dotenv": "^16.4.5",
		"lexical": "^0.8.0",
		"yargs": "^17.5.0",
		"sharp": "^0.33.4"
	},
	"devDependencies": {
		"@commitlint/cli": "^17.6.6",
		"@commitlint/config-conventional": "^17.6.6",
		"@commitlint/config-lerna-scopes": "^17.6.6",
		"@commitlint/travis-cli": "^17.6.6",
		"@compodoc/compodoc": "^1.1.19",
		"@cucumber/cucumber": "^8.9.0",
		"@cucumber/cucumber-expressions": "^16.0.1",
		"@cucumber/gherkin": "^25.0.2",
		"@cypress/browserify-preprocessor": "^3.0.2",
		"@lerna/legacy-package-management": "^8.1.2",
		"@next/eslint-plugin-next": "^13.0.5",
		"@nx/cypress": "^16.7.4",
		"@nx/detox": "^16.7.4",
		"@nx/eslint-plugin-nx": "^16.0.0-beta.1",
		"@nx/jest": "^16.7.4",
		"@nx/linter": "^16.7.4",
		"@nx/nest": "^16.7.4",
		"@nx/next": "^16.7.4",
		"@nx/node": "^16.7.4",
		"@nx/react": "^16.7.4",
		"@nx/web": "^16.7.4",
		"@nx/webpack": "^16.7.4",
		"@nx/workspace": "^16.7.4",
		"@semantic-release/changelog": "^6.0.3",
		"@semantic-release/git": "^10.0.1",
		"@semantic-release/github": "^9.2.6",
		"@semantic-release/npm": "^11.0.0",
		"@types/detox": "^18.1.0",
		"@types/electron": "^1.6.10",
		"@types/node": "^20.12.2",
		"@types/yargs": "^17.0.32",
		"@typescript-eslint/eslint-plugin": "5.60.1",
		"@typescript-eslint/parser": "5.60.1",
		"cloc": "^2.0.0-cloc",
		"commitizen": "^4.3.0",
		"concurrently": "^8.2.2",
		"conventional-changelog": "^3.1.25",
		"conventional-changelog-cli": "^2.2.2",
		"cross-env": "^7.0.3",
		"cspell": "8.0.0",
		"cypress": "^11.2.0",
		"cypress-file-upload": "^5.0.8",
		"cz-conventional-changelog": "^3.3.0",
		"detox": "20.11.1",
		"envalid": "^6.0.2",
		"eslint": "8.46.0",
		"eslint-config-prettier": "^8.5.0",
		"eslint-plugin-cypress": "2.13.4",
		"eslint-plugin-prettier": "^4.2.1",
		"eslint-plugin-react": "^7.31.8",
		"husky": "^9.0.11",
		"jimp": "^0.22.7",
		"lerna": "^8.1.2",
		"lerna-changelog": "^2.2.0",
		"lint-staged": "^10.4.0",
		"nx": "16.7.4",
		"nx-cloud": "16.3.0",
		"png-to-ico": "^2.1.8",
		"prettier": "^3.2.5",
		"prettier-eslint-cli": "^8.0.1",
		"pretty-quick": "^4.0.0",
		"rimraf": "^5.0.5",
		"semantic-release": "^22.0.12",
		"simple-git": "^3.20.0",
		"ts-node": "^10.9.2"
	},
	"overrides": {
		"prebuild": {
			"node-gyp": "$node-gyp"
		},
		"iconv": {
			"node-gyp": "9.3.1"
		},
		"twing": {
			"locutus": "2.0.30"
		}
	},
	"engines": {
		"node": ">=20.11.0",
		"yarn": ">=1.13.0"
	},
	"prettier": {
		"printWidth": 120,
		"singleQuote": true,
		"semi": true,
		"useTabs": true,
		"tabWidth": 4,
		"arrowParens": "always",
		"trailingComma": "none",
		"quoteProps": "as-needed",
		"trimTrailingWhitespace": true,
		"overrides": [
			{
				"files": "*.scss",
				"options": {
					"useTabs": false,
					"tabWidth": 2
				}
			},
			{
				"files": "*.yml",
				"options": {
					"useTabs": false,
					"tabWidth": 2
				}
			}
		]
	},
	"snyk": true
}
